### 羽毛球场地管理系统 - API测试指南

## 场地状态设计说明

### 场地基础状态（存储在数据库）
- **0**: 未启用 - 场地未启用，所有时段都不可用
- **1**: 启用 - 场地已启用，具体时段状态需要动态计算

### 时段状态（动态计算）
通过以下数据源实时计算得出：
- **1**: 空闲中 - 可以预约
- **2**: 使用中 - 不可预约（教学时间/用户使用中）
- **3**: 已预约 - 已被预约，不可预约
- **4**: 维护中 - 不可预约（场地维护/特殊配置）

### 状态计算优先级
1. 场地基础状态检查：venue.status != 1 → 维护中(4)
2. 特殊日期配置检查：按配置返回状态
3. 预约记录检查：有冲突 → 已预约(3)或使用中(2)
4. 默认业务规则：教学时间 → 使用中(2)，其他 → 空闲中(1)

## 1. 场地状态查询流程

### 1.1 获取场地状态矩阵（可视化展示）
GET http://localhost:8080/api/venue/status-matrix?date=2024-12-25
Accept: application/json

### 1.2 获取指定场地状态
GET http://localhost:8080/api/venue/status-matrix?date=2024-12-25&venueId=1
Accept: application/json

### 1.3 获取周末状态（验证业务规则）
GET http://localhost:8080/api/venue/status-matrix?date=2024-12-28
Accept: application/json

## 2. 场地预约流程

### 2.1 查询可用场地
GET http://localhost:8080/api/venue/availability?date=2024-12-25&startTime=19:00&endTime=20:00
Accept: application/json

### 2.2 带筛选条件查询
GET http://localhost:8080/api/venue/availability?date=2024-12-25&startTime=19:00&endTime=20:00&minPrice=20&maxPrice=40&venueType=1
Accept: application/json

### 2.3 创建预约订单
POST http://localhost:8080/api/reservations/create
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "venueId": 1,
  "reservationDate": "2024-12-25",
  "startTime": "19:00",
  "endTime": "20:00",
  "payType": 1,
  "remark": "测试预约"
}

### 2.4 验证状态变化
GET http://localhost:8080/api/venue/status-matrix?date=2024-12-25&venueId=1
Accept: application/json

## 3. 场地基础状态管理（管理员）

### 3.1 获取所有场地基础信息
GET http://localhost:8080/api/venue/list
Accept: application/json

### 3.2 更新场地基础状态（启用/禁用）
PUT http://localhost:8080/api/venue/status/1?status=0
Authorization: Bearer {{admin_token}}

### 3.3 验证禁用后的时段状态
GET http://localhost:8080/api/venue/status-matrix?date=2024-12-25&venueId=1
Accept: application/json

## 4. 用户到场管理流程

### 4.1 管理员查看当前预约
GET http://localhost:8080/api/reservations/venue/1?date=2024-12-25
Authorization: Bearer {{admin_token}}

### 4.2 用户到场签到（完成订单）
POST http://localhost:8080/api/reservations/admin/123/complete
Authorization: Bearer {{admin_token}}

### 4.3 验证使用中状态
GET http://localhost:8080/api/venue/status-matrix?date=2024-12-25&venueId=1
Accept: application/json

## 5. 并发控制测试

### 5.1 用户A创建订单
POST http://localhost:8080/api/reservations/create
Content-Type: application/json
Authorization: Bearer {{userA_token}}

{
  "venueId": 1,
  "reservationDate": "2024-12-25",
  "startTime": "20:00",
  "endTime": "21:00",
  "payType": 1,
  "remark": "用户A预约"
}

### 5.2 用户B同时创建订单（应失败）
POST http://localhost:8080/api/reservations/create
Content-Type: application/json
Authorization: Bearer {{userB_token}}

{
  "venueId": 1,
  "reservationDate": "2024-12-25",
  "startTime": "20:00",
  "endTime": "21:00",
  "payType": 1,
  "remark": "用户B预约"
}

## 6. 错误场景测试

### 6.1 场地未启用时预约
PUT http://localhost:8080/api/venue/status/1?status=0
Authorization: Bearer {{admin_token}}

POST http://localhost:8080/api/reservations/create
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "venueId": 1,
  "reservationDate": "2024-12-25",
  "startTime": "19:00",
  "endTime": "20:00",
  "payType": 1
}

### 6.2 无效的场地状态
PUT http://localhost:8080/api/venue/status/1?status=2
Authorization: Bearer {{admin_token}}

### 6.3 时间段错误
GET http://localhost:8080/api/venue/availability?date=2024-12-25&startTime=20:00&endTime=19:00
Accept: application/json

## 7. 响应数据结构说明

### 7.1 可用性查询响应
```json
{
  "code": 0,
  "msg": "成功",
  "data": {
    "date": "2024-12-25",
    "timeSlot": "19:00-20:00",
    "totalVenues": 9,
    "totalAvailable": 5,
    "availableVenues": [
      {
        "id": 1,
        "name": "羽毛球场1号",
        "description": "标准羽毛球场地",
        "location": "体育馆1号场地",
        "pricePerHour": 30.00,
        "type": 1,
        "typeDesc": "羽毛球场"
      }
    ],
    "unavailableVenues": [
      {
        "id": 2,
        "name": "羽毛球场2号",
        "location": "体育馆2号场地",
        "pricePerHour": 30.00,
        "unavailableReason": "该时间段为教学时间",
        "status": 2,
        "statusDesc": "使用中"
      }
    ]
  }
}
```

### 7.2 状态矩阵响应
```json
{
  "code": 0,
  "msg": "成功",
  "data": {
    "date": "2024-12-25",
    "venues": [
      {
        "id": 1,
        "name": "羽毛球场1号",
        "location": "体育馆1号场地",
        "pricePerHour": 30.00,
        "isAvailable": true
      }
    ],
    "timeSlots": ["08:00-09:00", "09:00-10:00", "18:00-19:00"],
    "statusMatrix": {
      "1": {
        "08:00-09:00": {
          "status": 2,
          "statusDesc": "使用中",
          "bookable": false,
          "reason": "教学时间"
        },
        "19:00-20:00": {
          "status": 1,
          "statusDesc": "空闲中",
          "bookable": true,
          "reason": null
        }
      }
    }
  }
}
```

## 8. 前端集成建议

### 8.1 状态颜色映射
```javascript
const STATUS_COLORS = {
  1: '#52c41a', // 空闲中 - 绿色
  2: '#faad14', // 使用中 - 橙色
  3: '#f5222d', // 已预约 - 红色
  4: '#d9d9d9'  // 维护中 - 灰色
};
```

### 8.2 场地基础状态管理
- 管理员可以设置场地的基础状态（启用/禁用）
- 禁用的场地所有时段都显示为维护中
- 启用的场地时段状态由业务规则动态计算 